// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Main_CV_PSGD
Rcpp::List Main_CV_PSGD(const arma::mat& x, const arma::vec& y, arma::uword& n_models, const arma::uword& model_type, const arma::uword& include_intercept, arma::uvec split_grid, arma::uvec size_grid, arma::uword max_iter, arma::uword cycling_iter, arma::uword n_folds, arma::uword n_threads);
RcppExport SEXP _PSGD_Main_CV_PSGD(SEXP xSEXP, SEXP ySEXP, SEXP n_modelsSEXP, SEXP model_typeSEXP, SEXP include_interceptSEXP, SEXP split_gridSEXP, SEXP size_gridSEXP, SEXP max_iterSEXP, SEXP cycling_iterSEXP, SEXP n_foldsSEXP, SEXP n_threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type n_models(n_modelsSEXP);
    Rcpp::traits::input_parameter< const arma::uword& >::type model_type(model_typeSEXP);
    Rcpp::traits::input_parameter< const arma::uword& >::type include_intercept(include_interceptSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type split_grid(split_gridSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type size_grid(size_gridSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type cycling_iter(cycling_iterSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type n_folds(n_foldsSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type n_threads(n_threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(Main_CV_PSGD(x, y, n_models, model_type, include_intercept, split_grid, size_grid, max_iter, cycling_iter, n_folds, n_threads));
    return rcpp_result_gen;
END_RCPP
}
// Main_PSGD
Rcpp::List Main_PSGD(const arma::mat& x, const arma::vec& y, arma::uword& n_models, const arma::uword& model_type, const arma::uword& include_intercept, arma::uword split, arma::uword size, arma::uword max_iter, arma::uword cycling_iter);
RcppExport SEXP _PSGD_Main_PSGD(SEXP xSEXP, SEXP ySEXP, SEXP n_modelsSEXP, SEXP model_typeSEXP, SEXP include_interceptSEXP, SEXP splitSEXP, SEXP sizeSEXP, SEXP max_iterSEXP, SEXP cycling_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type n_models(n_modelsSEXP);
    Rcpp::traits::input_parameter< const arma::uword& >::type model_type(model_typeSEXP);
    Rcpp::traits::input_parameter< const arma::uword& >::type include_intercept(include_interceptSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type split(splitSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type cycling_iter(cycling_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(Main_PSGD(x, y, n_models, model_type, include_intercept, split, size, max_iter, cycling_iter));
    return rcpp_result_gen;
END_RCPP
}
// Stepwise_Split
Rcpp::List Stepwise_Split(arma::mat x, arma::vec y, arma::uword n_models, arma::uword max_variables_per_model, const arma::uword& model_criterion, const arma::uword& stop_criterion, const double& stop_parameter);
RcppExport SEXP _PSGD_Stepwise_Split(SEXP xSEXP, SEXP ySEXP, SEXP n_modelsSEXP, SEXP max_variables_per_modelSEXP, SEXP model_criterionSEXP, SEXP stop_criterionSEXP, SEXP stop_parameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::uword >::type n_models(n_modelsSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type max_variables_per_model(max_variables_per_modelSEXP);
    Rcpp::traits::input_parameter< const arma::uword& >::type model_criterion(model_criterionSEXP);
    Rcpp::traits::input_parameter< const arma::uword& >::type stop_criterion(stop_criterionSEXP);
    Rcpp::traits::input_parameter< const double& >::type stop_parameter(stop_parameterSEXP);
    rcpp_result_gen = Rcpp::wrap(Stepwise_Split(x, y, n_models, max_variables_per_model, model_criterion, stop_criterion, stop_parameter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PSGD_Main_CV_PSGD", (DL_FUNC) &_PSGD_Main_CV_PSGD, 11},
    {"_PSGD_Main_PSGD", (DL_FUNC) &_PSGD_Main_PSGD, 9},
    {"_PSGD_Stepwise_Split", (DL_FUNC) &_PSGD_Stepwise_Split, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_PSGD(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
